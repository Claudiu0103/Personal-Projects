{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import '../Styles/LogIn.css'; // Asigură-te că acest fișier CSS există pentru stilizare\n//\n// function LogIn({ setAuthenticated }) {\n//     // State pentru a gestiona datele de intrare ale utilizatorului\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const navigate = useNavigate(); // Hook pentru navigarea în cadrul aplicației\n//\n//     // Funcția care este apelată la trimiterea formularului\n//     const handleSubmit = (event) => {\n//         event.preventDefault(); // Previne reîncărcarea paginii la trimiterea formularului\n//         const credentials = {\n//             username: username,\n//             password: password\n//         };\n//\n//         // Trimiterea unei cereri `POST` la backend pentru autentificare\n//         fetch('http://localhost:8080/api/user/login', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify(credentials)\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Eroare la autentificare'); // Aruncă o eroare dacă răspunsul nu este ok\n//                 }\n//                 return response.json(); // Transformă răspunsul în JSON\n//             })\n//             .then(data => {\n//                 console.log('Autentificare reușită:', data);\n//                 // Salvează token-ul de autentificare în localStorage\n//                 localStorage.setItem('authToken', data.token);\n//                 setAuthenticated(true); // Actualizează starea autentificării\n//                 navigate('/'); // Redirecționează utilizatorul către pagina principală\n//             })\n//             .catch(error => {\n//                 console.error('Eroare:', error); // Afișează eroarea în consolă\n//             });\n//     };\n//\n//     // Interfața utilizator pentru autentificare\n//     return (\n//         <div className=\"login-container\">\n//             <h2>Autentificare</h2>\n//             <p>Introdu datele necesare pentru a te autentifica:</p>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"username\">Nume utilizator sau Email:</label>\n//                     <input\n//                         type=\"text\"\n//                         id=\"username\"\n//                         value={username}\n//                         onChange={(e) => setUsername(e.target.value)}\n//                         placeholder=\"Introdu numele de utilizator sau email-ul\"\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"password\">Parolă:</label>\n//                     <input\n//                         type=\"password\"\n//                         id=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         placeholder=\"Introdu parola\"\n//                         required\n//                     />\n//                 </div>\n//                 <button type=\"submit\" className=\"login-button\">Autentificare</button>\n//             </form>\n//         </div>\n//     );\n// }\n//\n// export default LogIn;","map":{"version":3,"names":[],"sources":["D:/AN 3/IS/Proiect/frontend/src/Components/LogIn.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import '../Styles/LogIn.css'; // Asigură-te că acest fișier CSS există pentru stilizare\r\n//\r\n// function LogIn({ setAuthenticated }) {\r\n//     // State pentru a gestiona datele de intrare ale utilizatorului\r\n//     const [username, setUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const navigate = useNavigate(); // Hook pentru navigarea în cadrul aplicației\r\n//\r\n//     // Funcția care este apelată la trimiterea formularului\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault(); // Previne reîncărcarea paginii la trimiterea formularului\r\n//         const credentials = {\r\n//             username: username,\r\n//             password: password\r\n//         };\r\n//\r\n//         // Trimiterea unei cereri `POST` la backend pentru autentificare\r\n//         fetch('http://localhost:8080/api/user/login', {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify(credentials)\r\n//         })\r\n//             .then(response => {\r\n//                 if (!response.ok) {\r\n//                     throw new Error('Eroare la autentificare'); // Aruncă o eroare dacă răspunsul nu este ok\r\n//                 }\r\n//                 return response.json(); // Transformă răspunsul în JSON\r\n//             })\r\n//             .then(data => {\r\n//                 console.log('Autentificare reușită:', data);\r\n//                 // Salvează token-ul de autentificare în localStorage\r\n//                 localStorage.setItem('authToken', data.token);\r\n//                 setAuthenticated(true); // Actualizează starea autentificării\r\n//                 navigate('/'); // Redirecționează utilizatorul către pagina principală\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error('Eroare:', error); // Afișează eroarea în consolă\r\n//             });\r\n//     };\r\n//\r\n//     // Interfața utilizator pentru autentificare\r\n//     return (\r\n//         <div className=\"login-container\">\r\n//             <h2>Autentificare</h2>\r\n//             <p>Introdu datele necesare pentru a te autentifica:</p>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"username\">Nume utilizator sau Email:</label>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         id=\"username\"\r\n//                         value={username}\r\n//                         onChange={(e) => setUsername(e.target.value)}\r\n//                         placeholder=\"Introdu numele de utilizator sau email-ul\"\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"password\">Parolă:</label>\r\n//                     <input\r\n//                         type=\"password\"\r\n//                         id=\"password\"\r\n//                         value={password}\r\n//                         onChange={(e) => setPassword(e.target.value)}\r\n//                         placeholder=\"Introdu parola\"\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <button type=\"submit\" className=\"login-button\">Autentificare</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default LogIn;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}