{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN 3\\\\IS\\\\Proiect\\\\frontend\\\\src\\\\Components\\\\CarList.js\",\n  _s = $RefreshSig$();\n// src/Components/CarList.js\nimport React, { useEffect, useState } from 'react';\nimport CarItem from './CarItem';\nimport car1 from '../assets/images/car1.jpg';\nimport car2 from '../assets/images/car2.jpg';\nimport car3 from '../assets/images/car3.jpg';\nimport car4 from '../assets/images/car4.jpg';\nimport car5 from '../assets/images/car5.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CarList() {\n  _s();\n  const [cars, setCars] = useState([]);\n\n  // Array cu imaginile pentru primele 5 mașini\n  const carImages = [car1, car2, car3, car4, car5];\n  useEffect(() => {\n    // Exemplu de date statice; poți să le înlocuiești cu o cerere la un API\n    const fetchedCars = [{\n      model: 'BMW Seria 5',\n      year: 2020,\n      color: 'Negru',\n      price: 35000\n    }, {\n      model: 'Audi A4',\n      year: 2019,\n      color: 'Alb',\n      price: 30000\n    }, {\n      model: 'Mercedes-Benz C-Class',\n      year: 2021,\n      color: 'Albastru',\n      price: 45000\n    }, {\n      model: 'Toyota Corolla',\n      year: 2018,\n      color: 'Gri',\n      price: 20000\n    }, {\n      model: 'Ford Focus',\n      year: 2022,\n      color: 'Roșu',\n      price: 25000\n    }\n    // Adaugă mai multe mașini, dacă este necesar\n    ];\n\n    // Asociază imaginile cu primele 5 mașini\n    const carsWithImages = fetchedCars.map((car, index) => ({\n      ...car,\n      imageUrl: index < carImages.length ? carImages[index] : null // Adaugă URL-ul imaginii sau null\n    }));\n    setCars(carsWithImages);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"car-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"car-list-header\",\n      children: \"Ma\\u0219inile Disponibile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-list\",\n      children: cars.length > 0 ? cars.map((car, index) => /*#__PURE__*/_jsxDEV(CarItem, {\n        car: car\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nu exist\\u0103 ma\\u0219ini disponibile.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(CarList, \"/EQt6wAxOgtQYDavlJ/SWb5B/tI=\");\n_c = CarList;\nexport default CarList;\nvar _c;\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"names":["React","useEffect","useState","CarItem","car1","car2","car3","car4","car5","jsxDEV","_jsxDEV","CarList","_s","cars","setCars","carImages","fetchedCars","model","year","color","price","carsWithImages","map","car","index","imageUrl","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/AN 3/IS/Proiect/frontend/src/Components/CarList.js"],"sourcesContent":["// src/Components/CarList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport CarItem from './CarItem';\r\nimport car1 from '../assets/images/car1.jpg';\r\nimport car2 from '../assets/images/car2.jpg';\r\nimport car3 from '../assets/images/car3.jpg';\r\nimport car4 from '../assets/images/car4.jpg';\r\nimport car5 from '../assets/images/car5.jpg';\r\n\r\nfunction CarList() {\r\n    const [cars, setCars] = useState([]);\r\n\r\n    // Array cu imaginile pentru primele 5 mașini\r\n    const carImages = [car1, car2, car3, car4, car5];\r\n\r\n    useEffect(() => {\r\n        // Exemplu de date statice; poți să le înlocuiești cu o cerere la un API\r\n        const fetchedCars = [\r\n            { model: 'BMW Seria 5', year: 2020, color: 'Negru', price: 35000 },\r\n            { model: 'Audi A4', year: 2019, color: 'Alb', price: 30000 },\r\n            { model: 'Mercedes-Benz C-Class', year: 2021, color: 'Albastru', price: 45000 },\r\n            { model: 'Toyota Corolla', year: 2018, color: 'Gri', price: 20000 },\r\n            { model: 'Ford Focus', year: 2022, color: 'Roșu', price: 25000 },\r\n            // Adaugă mai multe mașini, dacă este necesar\r\n        ];\r\n\r\n        // Asociază imaginile cu primele 5 mașini\r\n        const carsWithImages = fetchedCars.map((car, index) => ({\r\n            ...car,\r\n            imageUrl: index < carImages.length ? carImages[index] : null // Adaugă URL-ul imaginii sau null\r\n        }));\r\n\r\n        setCars(carsWithImages);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"car-list-container\">\r\n            <h2 className=\"car-list-header\">Mașinile Disponibile</h2>\r\n            <div className=\"car-list\">\r\n                {cars.length > 0 ? (\r\n                    cars.map((car, index) => (\r\n                        <CarItem key={index} car={car} />\r\n                    ))\r\n                ) : (\r\n                    <p>Nu există mașini disponibile.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CarList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,IAAI,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMa,SAAS,GAAG,CAACX,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC;EAEhDP,SAAS,CAAC,MAAM;IACZ;IACA,MAAMe,WAAW,GAAG,CAChB;MAAEC,KAAK,EAAE,aAAa;MAAEC,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAM,CAAC,EAClE;MAAEH,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAM,CAAC,EAC5D;MAAEH,KAAK,EAAE,uBAAuB;MAAEC,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAM,CAAC,EAC/E;MAAEH,KAAK,EAAE,gBAAgB;MAAEC,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAM,CAAC,EACnE;MAAEH,KAAK,EAAE,YAAY;MAAEC,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAM;IAC/D;IAAA,CACH;;IAED;IACA,MAAMC,cAAc,GAAGL,WAAW,CAACM,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,MAAM;MACpD,GAAGD,GAAG;MACNE,QAAQ,EAAED,KAAK,GAAGT,SAAS,CAACW,MAAM,GAAGX,SAAS,CAACS,KAAK,CAAC,GAAG,IAAI,CAAC;IACjE,CAAC,CAAC,CAAC;IAEHV,OAAO,CAACO,cAAc,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAKiB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BlB,OAAA;MAAIiB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzDtB,OAAA;MAAKiB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACpBf,IAAI,CAACa,MAAM,GAAG,CAAC,GACZb,IAAI,CAACS,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAChBd,OAAA,CAACP,OAAO;QAAaoB,GAAG,EAAEA;MAAI,GAAhBC,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CACnC,CAAC,gBAEFtB,OAAA;QAAAkB,QAAA,EAAG;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACtC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACpB,EAAA,CAxCQD,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AA0ChB,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}