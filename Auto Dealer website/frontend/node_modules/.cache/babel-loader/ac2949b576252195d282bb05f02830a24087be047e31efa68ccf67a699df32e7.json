{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN 3\\\\IS\\\\Proiect\\\\frontend\\\\src\\\\Components\\\\DataManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataManagement() {\n  _s();\n  // Starea pentru datele utilizatorului\n  const [userData, setUserData] = useState({\n    nume: '',\n    prenume: '',\n    email: '',\n    adresa: '',\n    telefon: ''\n  });\n\n  // Utilizați useEffect pentru a încărca datele utilizatorului (exemplu de date fictive)\n  useEffect(() => {\n    // Aceasta ar putea fi înlocuită cu o cerere API pentru a obține datele reale\n    const fetchUserData = () => {\n      // Exemplar de date utilizator\n      const data = {\n        nume: 'Popescu',\n        prenume: 'Ion',\n        email: 'ion.popescu@example.com',\n        adresa: 'Strada Exemplu, Nr. 10, București',\n        telefon: '0712345678'\n      };\n      setUserData(data);\n    };\n    fetchUserData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Date Personale\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nume: \", userData.nume]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Prenume: \", userData.prenume]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", userData.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Adres\\u0103: \", userData.adresa]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Num\\u0103r de telefon: \", userData.telefon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(DataManagement, \"JH1pBrBTp+9jpMGChb4Xv0bz/3I=\");\n_c = DataManagement;\nexport default DataManagement;\nvar _c;\n$RefreshReg$(_c, \"DataManagement\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DataManagement","_s","userData","setUserData","nume","prenume","email","adresa","telefon","fetchUserData","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/AN 3/IS/Proiect/frontend/src/Components/DataManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction DataManagement() {\r\n    // Starea pentru datele utilizatorului\r\n    const [userData, setUserData] = useState({\r\n        nume: '',\r\n        prenume: '',\r\n        email: '',\r\n        adresa: '',\r\n        telefon: ''\r\n    });\r\n\r\n    // Utilizați useEffect pentru a încărca datele utilizatorului (exemplu de date fictive)\r\n    useEffect(() => {\r\n        // Aceasta ar putea fi înlocuită cu o cerere API pentru a obține datele reale\r\n        const fetchUserData = () => {\r\n            // Exemplar de date utilizator\r\n            const data = {\r\n                nume: 'Popescu',\r\n                prenume: 'Ion',\r\n                email: 'ion.popescu@example.com',\r\n                adresa: 'Strada Exemplu, Nr. 10, București',\r\n                telefon: '0712345678'\r\n            };\r\n            setUserData(data);\r\n        };\r\n        fetchUserData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Date Personale</h2>\r\n            <p>Nume: {userData.nume}</p>\r\n            <p>Prenume: {userData.prenume}</p>\r\n            <p>Email: {userData.email}</p>\r\n            <p>Adresă: {userData.adresa}</p>\r\n            <p>Număr de telefon: {userData.telefon}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataManagement;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACrCO,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACb,CAAC,CAAC;;EAEF;EACAZ,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,aAAa,GAAGA,CAAA,KAAM;MACxB;MACA,MAAMC,IAAI,GAAG;QACTN,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE,yBAAyB;QAChCC,MAAM,EAAE,mCAAmC;QAC3CC,OAAO,EAAE;MACb,CAAC;MACDL,WAAW,CAACO,IAAI,CAAC;IACrB,CAAC;IACDD,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhB,OAAA;MAAAY,QAAA,GAAG,QAAM,EAACT,QAAQ,CAACE,IAAI;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BhB,OAAA;MAAAY,QAAA,GAAG,WAAS,EAACT,QAAQ,CAACG,OAAO;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClChB,OAAA;MAAAY,QAAA,GAAG,SAAO,EAACT,QAAQ,CAACI,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BhB,OAAA;MAAAY,QAAA,GAAG,eAAQ,EAACT,QAAQ,CAACK,MAAM;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChChB,OAAA;MAAAY,QAAA,GAAG,yBAAkB,EAACT,QAAQ,CAACM,OAAO;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAACd,EAAA,CArCQD,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAuCvB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}