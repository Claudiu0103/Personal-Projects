{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN 3\\\\IS\\\\Proiect\\\\frontend\\\\src\\\\Components\\\\DataManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataManagement() {\n  _s();\n  const [clientData, setClientData] = useState(null);\n  const userId = localStorage.getItem('idUser'); // Obține `userId` din `localStorage` sau dintr-o sursă de date\n\n  useEffect(() => {\n    // Verifică dacă `userId` este definit\n    if (userId) {\n      fetch(`http://localhost:8080/api/client/${userId}`).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Eroare la încărcarea datelor clientului\");\n        }\n        return response.json();\n      }).then(data => {\n        console.log(\"Data received from backend:\", data);\n        setClientData(data);\n      }).catch(error => console.error(\"Eroare:\", error));\n    } else {\n      console.error(\"User ID nu este disponibil!\");\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Date Personale\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nume: \", userData.nume]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Prenume: \", userData.prenume]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", userData.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Adres\\u0103: \", userData.adresa]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Num\\u0103r de telefon: \", userData.telefon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(DataManagement, \"OfnOEGiL8kWi10gL4jHrp9NjGUE=\");\n_c = DataManagement;\nexport default DataManagement;\nvar _c;\n$RefreshReg$(_c, \"DataManagement\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DataManagement","_s","clientData","setClientData","userId","localStorage","getItem","fetch","then","response","ok","Error","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","userData","nume","prenume","email","adresa","telefon","_c","$RefreshReg$"],"sources":["D:/AN 3/IS/Proiect/frontend/src/Components/DataManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction DataManagement() {\r\n    const [clientData, setClientData] = useState(null);\r\n    const userId = localStorage.getItem('idUser'); // Obține `userId` din `localStorage` sau dintr-o sursă de date\r\n\r\n    useEffect(() => {\r\n        // Verifică dacă `userId` este definit\r\n        if (userId) {\r\n            fetch(`http://localhost:8080/api/client/${userId}`)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(\"Eroare la încărcarea datelor clientului\");\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    console.log(\"Data received from backend:\", data);\r\n                    setClientData(data);\r\n                })\r\n                .catch(error => console.error(\"Eroare:\", error));\r\n        } else {\r\n            console.error(\"User ID nu este disponibil!\");\r\n        }\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Date Personale</h2>\r\n            <p>Nume: {userData.nume}</p>\r\n            <p>Prenume: {userData.prenume}</p>\r\n            <p>Email: {userData.email}</p>\r\n            <p>Adresă: {userData.adresa}</p>\r\n            <p>Număr de telefon: {userData.telefon}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataManagement;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMO,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAE/CV,SAAS,CAAC,MAAM;IACZ;IACA,IAAIQ,MAAM,EAAE;MACRG,KAAK,CAAC,oCAAoCH,MAAM,EAAE,CAAC,CAC9CI,IAAI,CAACC,QAAQ,IAAI;QACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;QAC9D;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;QACVC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,IAAI,CAAC;QAChDV,aAAa,CAACU,IAAI,CAAC;MACvB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC,CAAC;IACxD,CAAC,MAAM;MACHH,OAAO,CAACG,KAAK,CAAC,6BAA6B,CAAC;IAChD;EACJ,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAEZ,oBACIL,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvB,OAAA;MAAAmB,QAAA,GAAG,QAAM,EAACK,QAAQ,CAACC,IAAI;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BvB,OAAA;MAAAmB,QAAA,GAAG,WAAS,EAACK,QAAQ,CAACE,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCvB,OAAA;MAAAmB,QAAA,GAAG,SAAO,EAACK,QAAQ,CAACG,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BvB,OAAA;MAAAmB,QAAA,GAAG,eAAQ,EAACK,QAAQ,CAACI,MAAM;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCvB,OAAA;MAAAmB,QAAA,GAAG,yBAAkB,EAACK,QAAQ,CAACK,OAAO;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAACrB,EAAA,CAlCQD,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAoCvB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}