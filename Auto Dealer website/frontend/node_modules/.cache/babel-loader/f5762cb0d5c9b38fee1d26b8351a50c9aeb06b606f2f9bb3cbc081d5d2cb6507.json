{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN 3\\\\IS\\\\Proiect\\\\frontend\\\\src\\\\Components\\\\ShowroomList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport ShowroomItem from './ShowroomItem';\nimport '../Styles/ShowroomList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowroomList({\n  userRole\n}) {\n  _s();\n  const [showrooms, setShowrooms] = useState([]);\n  const [selectedShowroom, setSelectedShowroom] = useState(null);\n  const [updatedName, setUpdatedName] = useState(\"\");\n  const handleAddShowroom = () => {\n    console.log(\"Add Showroom button clicked\");\n  };\n  const handleUpdateShowroom = showroomId => {\n    const showroomToEdit = showrooms.find(showroom => showroom.idShowroom === showroomId);\n    setSelectedShowroom(showroomToEdit);\n    setUpdatedName(showroomToEdit.name); // Pre-populează formularul cu numele curent\n  };\n  const handleDeleteShowroom = showroomId => {\n    console.log(`Delete Showroom with ID ${showroomId} clicked`);\n  };\n  const handleSaveUpdatedShowroom = () => {\n    if (!selectedShowroom) return;\n\n    // Trimitere cerere PUT către server\n    fetch(`http://localhost:8080/api/showroom/${selectedShowroom.idShowroom}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        idShowroom: selectedShowroom.idShowroom,\n        name: updatedName\n        // Adaugă alte câmpuri dacă există\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Eroare la actualizarea showroom-ului\");\n      }\n      return response.json();\n    }).then(updatedShowroom => {\n      console.log(\"Showroom updated:\", updatedShowroom);\n      setShowrooms(prevShowrooms => prevShowrooms.map(showroom => showroom.idShowroom === updatedShowroom.idShowroom ? updatedShowroom : showroom));\n      setSelectedShowroom(null); // Resetează formularul\n    }).catch(error => console.error(\"Eroare:\", error));\n  };\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/showroom\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Eroare la încărcarea datelor\");\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Data received from backend:\", data);\n      setShowrooms(data);\n    }).catch(error => console.error(\"Eroare:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Showroom-urile Disponibile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), userRole === \"Admin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonAddShowroom\",\n        onClick: handleAddShowroom,\n        children: \"Add Showroom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showroom-list\",\n      children: showrooms.length > 0 ? showrooms.map((showroom, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showroom-item-container\",\n        children: [/*#__PURE__*/_jsxDEV(ShowroomItem, {\n          showroom: showroom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this), userRole === \"Admin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonUpdateShowroom\",\n            onClick: () => handleUpdateShowroom(showroom.idShowroom),\n            children: \"Update Showroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonDeleteShowroom\",\n            onClick: () => handleDeleteShowroom(showroom.idShowroom),\n            children: \"Delete Showroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nu exist\\u0103 showroom-uri disponibile.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), selectedShowroom && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Actualizeaz\\u0103 Showroom-ul\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nume:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: updatedName,\n          onChange: e => setUpdatedName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveUpdatedShowroom,\n        children: \"Salveaz\\u0103\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedShowroom(null),\n        children: \"Anuleaz\\u0103\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(ShowroomList, \"5IY3oZ9LDUWAVh7G5C5XsBlmJ3g=\");\n_c = ShowroomList;\nexport default ShowroomList;\nvar _c;\n$RefreshReg$(_c, \"ShowroomList\");","map":{"version":3,"names":["useEffect","useState","React","ShowroomItem","jsxDEV","_jsxDEV","ShowroomList","userRole","_s","showrooms","setShowrooms","selectedShowroom","setSelectedShowroom","updatedName","setUpdatedName","handleAddShowroom","console","log","handleUpdateShowroom","showroomId","showroomToEdit","find","showroom","idShowroom","name","handleDeleteShowroom","handleSaveUpdatedShowroom","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","updatedShowroom","prevShowrooms","map","catch","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","index","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/AN 3/IS/Proiect/frontend/src/Components/ShowroomList.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport React from 'react';\r\nimport ShowroomItem from './ShowroomItem';\r\nimport '../Styles/ShowroomList.css';\r\n\r\nfunction ShowroomList({ userRole }) {\r\n    const [showrooms, setShowrooms] = useState([]);\r\n    const [selectedShowroom, setSelectedShowroom] = useState(null);\r\n    const [updatedName, setUpdatedName] = useState(\"\");\r\n\r\n    const handleAddShowroom = () => {\r\n        console.log(\"Add Showroom button clicked\");\r\n    };\r\n\r\n    const handleUpdateShowroom = (showroomId) => {\r\n        const showroomToEdit = showrooms.find(showroom => showroom.idShowroom === showroomId);\r\n        setSelectedShowroom(showroomToEdit);\r\n        setUpdatedName(showroomToEdit.name); // Pre-populează formularul cu numele curent\r\n    };\r\n\r\n    const handleDeleteShowroom = (showroomId) => {\r\n        console.log(`Delete Showroom with ID ${showroomId} clicked`);\r\n    };\r\n\r\n    const handleSaveUpdatedShowroom = () => {\r\n        if (!selectedShowroom) return;\r\n\r\n        // Trimitere cerere PUT către server\r\n        fetch(`http://localhost:8080/api/showroom/${selectedShowroom.idShowroom}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                idShowroom: selectedShowroom.idShowroom,\r\n                name: updatedName,\r\n                // Adaugă alte câmpuri dacă există\r\n            }),\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(\"Eroare la actualizarea showroom-ului\");\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(updatedShowroom => {\r\n                console.log(\"Showroom updated:\", updatedShowroom);\r\n                setShowrooms(prevShowrooms =>\r\n                    prevShowrooms.map(showroom =>\r\n                        showroom.idShowroom === updatedShowroom.idShowroom ? updatedShowroom : showroom\r\n                    )\r\n                );\r\n                setSelectedShowroom(null); // Resetează formularul\r\n            })\r\n            .catch(error => console.error(\"Eroare:\", error));\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/api/showroom\")\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(\"Eroare la încărcarea datelor\");\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log(\"Data received from backend:\", data);\r\n                setShowrooms(data);\r\n            })\r\n            .catch(error => console.error(\"Eroare:\", error));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Showroom-urile Disponibile</h2>\r\n            {userRole === \"Admin\" && (\r\n                <div className=\"button-container\">\r\n                    <button className=\"buttonAddShowroom\" onClick={handleAddShowroom}>Add Showroom</button>\r\n                </div>\r\n            )}\r\n            <div className=\"showroom-list\">\r\n                {showrooms.length > 0 ? (\r\n                    showrooms.map((showroom, index) => (\r\n                        <div key={index} className=\"showroom-item-container\">\r\n                            <ShowroomItem showroom={showroom} />\r\n                            {userRole === \"Admin\" && (\r\n                                <div className=\"admin-buttons-container\">\r\n                                    <button\r\n                                        className=\"buttonUpdateShowroom\"\r\n                                        onClick={() => handleUpdateShowroom(showroom.idShowroom)}\r\n                                    >\r\n                                        Update Showroom\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"buttonDeleteShowroom\"\r\n                                        onClick={() => handleDeleteShowroom(showroom.idShowroom)}\r\n                                    >\r\n                                        Delete Showroom\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>Nu există showroom-uri disponibile.</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Formular pentru actualizare */}\r\n            {selectedShowroom && (\r\n                <div className=\"update-form\">\r\n                    <h3>Actualizează Showroom-ul</h3>\r\n                    <label>\r\n                        Nume:\r\n                        <input\r\n                            type=\"text\"\r\n                            value={updatedName}\r\n                            onChange={(e) => setUpdatedName(e.target.value)}\r\n                        />\r\n                    </label>\r\n                    <button onClick={handleSaveUpdatedShowroom}>Salvează</button>\r\n                    <button onClick={() => setSelectedShowroom(null)}>Anulează</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowroomList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}