{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN 3\\\\IS\\\\Proiect\\\\frontend\\\\src\\\\Components\\\\DataManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataManagement() {\n  _s();\n  const [clientData, setClientData] = useState(null);\n  const userId = localStorage.getItem('idUser');\n  useEffect(() => {\n    // Verifică dacă `userId` este definit\n    if (userId) {\n      fetch(`http://localhost:8080/api/client/${userId}`), {\n        method: 'GET',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }.then(response => {\n        if (!response.ok) {\n          throw new Error(\"Eroare la încărcarea datelor clientului\");\n        }\n        return response.json();\n      }).then(data => {\n        console.log(\"Data received from backend:\", data);\n        setClientData(data);\n      }).catch(error => console.error(\"Eroare:\", error));\n    } else {\n      console.error(\"User ID nu este disponibil!\");\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Datele Clientului\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), clientData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nume: \", clientData.nume]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prenume: \", clientData.prenume]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", clientData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Adres\\u0103: \", clientData.adresa]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Telefon: \", clientData.telefon]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Se \\xEEncarc\\u0103 datele clientului...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(DataManagement, \"OfnOEGiL8kWi10gL4jHrp9NjGUE=\");\n_c = DataManagement;\nexport default DataManagement;\nvar _c;\n$RefreshReg$(_c, \"DataManagement\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DataManagement","_s","clientData","setClientData","userId","localStorage","getItem","fetch","method","credentials","headers","then","response","ok","Error","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","nume","prenume","email","adresa","telefon","_c","$RefreshReg$"],"sources":["D:/AN 3/IS/Proiect/frontend/src/Components/DataManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction DataManagement() {\r\n    const [clientData, setClientData] = useState(null);\r\n    const userId = localStorage.getItem('idUser');\r\n\r\n    useEffect(() => {\r\n        // Verifică dacă `userId` este definit\r\n        if (userId) {\r\n            fetch(`http://localhost:8080/api/client/${userId}`),{\r\n                method: 'GET',\r\n                credentials: 'include',\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(\"Eroare la încărcarea datelor clientului\");\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    console.log(\"Data received from backend:\", data);\r\n                    setClientData(data);\r\n                })\r\n                .catch(error => console.error(\"Eroare:\", error));\r\n        } else {\r\n            console.error(\"User ID nu este disponibil!\");\r\n        }\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Datele Clientului</h2>\r\n            {clientData ? (\r\n                <div>\r\n                    <p>Nume: {clientData.nume}</p>\r\n                    <p>Prenume: {clientData.prenume}</p>\r\n                    <p>Email: {clientData.email}</p>\r\n                    <p>Adresă: {clientData.adresa}</p>\r\n                    <p>Telefon: {clientData.telefon}</p>\r\n                </div>\r\n            ) : (\r\n                <p>Se încarcă datele clientului...</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataManagement;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMO,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAE7CV,SAAS,CAAC,MAAM;IACZ;IACA,IAAIQ,MAAM,EAAE;MACRG,KAAK,CAAC,oCAAoCH,MAAM,EAAE,CAAC,EAAC;QAChDI,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAC;UACJ,cAAc,EAAE;QACpB;MACJ,CAAC,CACIC,IAAI,CAACC,QAAQ,IAAI;QACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;QAC9D;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;QACVC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,IAAI,CAAC;QAChDb,aAAa,CAACa,IAAI,CAAC;MACvB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC,CAAC;IACxD,CAAC,MAAM;MACHH,OAAO,CAACG,KAAK,CAAC,6BAA6B,CAAC;IAChD;EACJ,CAAC,EAAE,CAAChB,MAAM,CAAC,CAAC;EAEZ,oBACIL,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBvB,UAAU,gBACPH,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,GAAG,QAAM,EAACnB,UAAU,CAACwB,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B1B,OAAA;QAAAsB,QAAA,GAAG,WAAS,EAACnB,UAAU,CAACyB,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpC1B,OAAA;QAAAsB,QAAA,GAAG,SAAO,EAACnB,UAAU,CAAC0B,KAAK;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC1B,OAAA;QAAAsB,QAAA,GAAG,eAAQ,EAACnB,UAAU,CAAC2B,MAAM;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClC1B,OAAA;QAAAsB,QAAA,GAAG,WAAS,EAACnB,UAAU,CAAC4B,OAAO;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,gBAEN1B,OAAA;MAAAsB,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACxB,EAAA,CA9CQD,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AAgDvB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}